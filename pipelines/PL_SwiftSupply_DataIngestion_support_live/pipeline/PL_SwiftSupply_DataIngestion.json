{
    "name": "PL_SwiftSupply_DataIngestion",
    "properties": {
        "activities": [
            {
                "name": "Lookup1",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "JsonSource",
                        "storeSettings": {
                            "type": "AzureBlobFSReadSettings",
                            "recursive": true,
                            "enablePartitionDiscovery": false
                        },
                        "formatSettings": {
                            "type": "JsonReadSettings"
                        }
                    },
                    "dataset": {
                        "referenceName": "Json1",
                        "type": "DatasetReference"
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "ForEach1",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Lookup1",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Lookup1').output.value",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "Append variable1",
                            "type": "AppendVariable",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "ExpectedFiles",
                                "value": {
                                    "value": "@concat(item().filenamePrefix, formatDateTime(utcNow(),'yyyyMMdd'), '.csv')\n",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Until1",
                "type": "Until",
                "dependsOn": [
                    {
                        "activity": "ForEach1",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(length(variables('FoundFiles')), length(variables('ExpectedFiles')))\n",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "Execute Pipeline1",
                            "type": "ExecutePipeline",
                            "dependsOn": [],
                            "policy": {
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "pipeline": {
                                    "referenceName": "pipeline1",
                                    "type": "PipelineReference"
                                },
                                "waitOnCompletion": true
                            }
                        },
                        {
                            "name": "Set variable1",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Execute Pipeline1",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "FoundFiles",
                                "value": {
                                    "value": "@intersection(\n    variables('ExpectedFiles'),\n    activity('Execute Pipeline1').output.pipelineReturnValue.FoundFiles\n)\n",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Wait1",
                            "type": "Wait",
                            "dependsOn": [
                                {
                                    "activity": "Set variable1",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "waitTimeInSeconds": 1
                            }
                        },
                        {
                            "name": "If Condition1_copy1",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "Wait1",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@equals(length(variables('FoundFiles')), length(variables('ExpectedFiles')))\n",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Execute Pipeline2_copy1",
                                        "type": "ExecutePipeline",
                                        "dependsOn": [],
                                        "policy": {
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "pipeline": {
                                                "referenceName": "pipeline2",
                                                "type": "PipelineReference"
                                            },
                                            "waitOnCompletion": true,
                                            "parameters": {
                                                "FoundFiles": {
                                                    "value": "@variables('FoundFiles')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "timeout": "0.00:10:00"
                }
            },
            {
                "name": "Transformation_Bronze_to_Silver",
                "type": "DatabricksNotebook",
                "dependsOn": [
                    {
                        "activity": "Until1",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "notebookPath": "/SwiftSupplyLogistics/SSL-batch-bronze-to-silver"
                },
                "linkedServiceName": {
                    "referenceName": "AzureDatabricks1",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "Transformation_Silver_to_Gold",
                "type": "DatabricksNotebook",
                "dependsOn": [
                    {
                        "activity": "Transformation_Bronze_to_Silver",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "notebookPath": "/SwiftSupplyLogistics/SSL-silver-gold"
                },
                "linkedServiceName": {
                    "referenceName": "AzureDatabricks1",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "Archive",
                "type": "ExecutePipeline",
                "dependsOn": [
                    {
                        "activity": "Transformation_Silver_to_Gold",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "pipeline": {
                        "referenceName": "Archive",
                        "type": "PipelineReference"
                    },
                    "waitOnCompletion": true
                }
            }
        ],
        "variables": {
            "ExpectedFiles": {
                "type": "Array"
            },
            "FoundFiles": {
                "type": "Array"
            }
        },
        "annotations": [],
        "lastPublishTime": "2025-08-31T15:19:11Z"
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}